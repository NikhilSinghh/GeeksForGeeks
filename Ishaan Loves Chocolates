//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


class Array
{
public:
    template <class T>
    static void input(vector<T> &A,int n)
    {
        for (int i = 0; i < n; i++)
        {
            scanf("%d ",&A[i]);
        }
    }

    template <class T>
    static void print(vector<T> &A)
    {
        for (int i = 0; i < A.size(); i++)
        {
            cout << A[i] << " ";
        }
        cout << endl;
    }
};


// } Driver Code Ends
class Solution {
  public:
  
  //Brut force
  
    // int chocolates(int n, vector<int> &arr) {
    //     // code here
    //     int ans=INT_MAX;
    //     for(int i=0; i< n;i++)
    //     {
    //         if(ans>arr[i])
    //         ans=arr[i];
    //     }
    //     return ans;
    // }
    
    
    
    // Two pointer approach
    
      int chocolates(int n, vector<int> &arr) {
    int i = 0;
    int j = n - 1;
    int ans = INT_MAX; 

    while (i <= j) {
        if (arr[i] > arr[j]) {
            ans = arr[j];
            i++;
        } else {
            ans = arr[i];
            j--;
        }
    }

    return ans;
}
};


//{ Driver Code Starts.

int main(){
    int t;
    scanf("%d ",&t);
    while(t--){
        
        int n;
        scanf("%d",&n);
        
        
        vector<int> arr(n);
        Array::input(arr,n);
        
        Solution obj;
        int res = obj.chocolates(n, arr);
        
        cout<<res<<endl;
        
    }
}

// } Driver Code Ends
